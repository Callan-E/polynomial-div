from random import *

#Function that formats quotient and result into nicer forms
def formatter(startingpower,array):
    formatted = ""
    for x in range(len(array)):
        if array[x] == 0:
            formatted += ""
        elif startingpower - x == 1:
            if array[x] >= 0:
                formatted += f"+ {str(array[x])} " if x != 0 else f"{str(array[x])} "
            else:
                formatted += f"- {str(array[x]*-1)} "
        elif startingpower - x == 2:
            if array[x] >= 0:
                formatted += f"+ {str(array[x])}x " if x != 0 else f"{str(array[x])}x "
            else:
                formatted += f"- {str(array[x]*-1)}x "
        elif startingpower - x > 2:
            if array[x] >= 0:
                formatted += f"+ {str(array[x])}x^{startingpower-x-1} " if x != 0 else f"{str(array[x])}x^{startingpower-x-1} "
            else:
                formatted += f"- {str(array[x]*-1)}x^{startingpower-x-1} "  
        else:
            if array[x] >= 0:
                formatted += f"+ rem{str(array[x])} "
            else:
                formatted += f"- rem{str(array[x])} "
    return formatted
while True:

    #Setup
    randorinput = input("\n(1) Would you like to input the division, or\n(2) Would you prefer random?\nInput (1 or 2): ")
    if randorinput == "1":
        quotient = []
        divisor = []
        quotpoly = int(input("Polynomial Degree (0 - a very large number): "))
        for n in range(quotpoly+1):
            quotient.append(int(input(f"coefficient of x^{quotpoly-n} ")))
        quotpoly += 1
        divisor.append(int(input("x coefficient of divisor: ")))
        divisor.append(int(input(f"Divided by {divisor[0]}x +/- ")))
    if randorinput == "2":
        quotpoly = randint(2,4)
        quotient = []
        divisor = []
        for x in range(quotpoly):
            quotient.append(randint(-10,10))
        for n in range(2):
            divisor.append(randint(1,2))
    result = []
    if divisor[0] != 1:
        divcoeff = True
    todivide = -1 * divisor[1] / divisor[0]
    print(todivide)

    #Algorithm
    result.append(quotient[0])
    for x in range(quotpoly-1):
        result.append(quotient[x+1] + (result[x]*todivide))
    
    #Formatting
    resultformatted = formatter(quotpoly-1,result)
    quotientformatted = formatter(quotpoly,quotient)
    if int(divisor[1]) >= 0:
        divisorformatted = str(f"{str(divisor[0])}x + {str(divisor[1])}") if divisor[0] != 1 else str(f"x + {str(divisor[1])}")
    if int(divisor[1]) < 0:
        divisorformatted = str(f"{str(divisor[0])}x - {divisor[1]}") if divisor[0] != 1 else str(f"x - {str(divisor[1])}")
    print(f"\n{quotientformatted}/ {divisorformatted} = {resultformatted}")
